{"version":3,"file":"static/js/527.ec404e86.chunk.js","mappings":"6QACA,EAAmC,mCAAnC,EAAsG,gDAAtG,EAAiL,2CAAjL,EAAyP,6CAAzP,EAA+S,yB,SCQlSA,EAAW,SAACC,GACvB,IAAQC,EAAoBD,EAApBC,QAASC,EAAWF,EAAXE,OAEjB,OACE,gBAAKC,UAAWC,EAAwB,SACrCH,GACC,SAAC,KAAO,CAACE,UAAWC,EAAeC,QAASH,EAAQI,GAAE,WAAMC,EAAAA,EAAAA,OAAa,sBAIzE,iBAAKJ,UAAWC,EAAqC,WACnD,iBAAMD,UAAWC,EAAgC,yDAGjD,SAAC,KAAO,CACND,UAAWK,IAAGJ,EAAeA,GAC7BE,GAAE,WAAMC,EAAAA,EAAAA,OAAa,uBAQjC,ECbME,EAAiB,qGAKpB,OALoB,8BACrB,WACE,MAA4BC,KAAKV,MAAzBC,EAAO,EAAPA,QAASC,EAAM,EAANA,OAEjB,OAAO,SAACH,EAAQ,CAACE,QAASA,EAASC,OAAQA,GAC7C,KAAC,EALoB,CAASS,EAAAA,WAQhC,GAAeC,EAAAA,EAAAA,KACbC,EAAAA,EAAAA,KAfsB,SAACC,GACvB,MAAO,CACLb,QAASa,EAAMC,KAAKC,OAExB,GAaI,CAAEd,OAAAA,EAAAA,KAHN,CAKEO,E","sources":["webpack://samurai/./src/pages/settingsPage/settings.module.scss?de83","pages/settingsPage/Settings.tsx","pages/settingsPage/SettingsContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"buttonsContainer\":\"settings_buttonsContainer__LPyW7\",\"withoutAuthorizationContainer\":\"settings_withoutAuthorizationContainer__nySmM\",\"withoutAuthorizationText\":\"settings_withoutAuthorizationText__vG5wb\",\"withoutAuthorizationButton\":\"settings_withoutAuthorizationButton__IIF8L\",\"button\":\"settings_button__XG209\"};","import React from 'react';\n\nimport cn from 'classnames';\nimport { PATH } from 'enum/pathEnum';\nimport { NavLink } from 'react-router-dom';\n\nimport styles from './settings.module.scss';\nimport { SettingsPropsType } from './types';\n\nexport const Settings = (props: SettingsPropsType) => {\n  const { isOwner, logout } = props;\n\n  return (\n    <div className={styles.buttonsContainer}>\n      {isOwner ? (\n        <NavLink className={styles.button} onClick={logout} to={`/${PATH.LOGIN}`}>\n          Log out\n        </NavLink>\n      ) : (\n        <div className={styles.withoutAuthorizationContainer}>\n          <span className={styles.withoutAuthorizationText}>\n            Settings are available to authorized users\n          </span>\n          <NavLink\n            className={cn(styles.button, styles.withoutAuthorizationButton)}\n            to={`/${PATH.LOGIN}`}\n          >\n            Login\n          </NavLink>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { Component, ComponentType } from 'react';\n\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { logout } from 'store/reducers/authReducer/authReducer';\nimport { RootStateType } from 'store/types';\n\nimport { Settings } from './Settings';\nimport {\n  MapDispatchToPropsType,\n  MapStateToPropsType,\n  SettingsContainerPropsType,\n} from './types';\n\nconst mapStateToProps = (state: RootStateType): MapStateToPropsType => {\n  return {\n    isOwner: state.auth.userId,\n  };\n};\n\nclass SettingsContainer extends Component<SettingsContainerPropsType> {\n  render() {\n    const { isOwner, logout } = this.props;\n\n    return <Settings isOwner={isOwner} logout={logout} />;\n  }\n}\n\nexport default compose<ComponentType>(\n  connect<MapStateToPropsType, MapDispatchToPropsType, object, RootStateType>(\n    mapStateToProps,\n    { logout },\n  ),\n)(SettingsContainer);\n"],"names":["Settings","props","isOwner","logout","className","styles","onClick","to","PATH","cn","SettingsContainer","this","Component","compose","connect","state","auth","userId"],"sourceRoot":""}